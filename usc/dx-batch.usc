' generate the body of the icd 10 tx care batch
%version 00.0.1 08/12/15 TxAce

%define DEBUG_CLCOUNT 5

%define CN_ProdSys "/c0/MIS"
%define CN_DefaultParm "CARECONT"

start dx-batch(parmfile, option, regid[], retcode)
   '********* SCRIPT ARGUMENTS *************
   parmfile          is x
   option            is x     ' Parameters for script behavior (Separated by semicolon)
   regid[]           is x
                              ' Valid Options :
   retcode           is b     ' Returned code for script execution (non-zero indicates error)
   '********* SCRIPT VARIABLES *************
   win               is b           ' User interface window variable
   lock-idx          is i
   OK                is x           ' User Input Variable (Y/N)
   client-id         is x           ' Client ID variable
   ClCount           is n           ' Client Counter
   TransCount        is n           ' Transaction Counter
   DiagCount         is n           ' Diagnosis Record Counter
   LockReg[]         is x           ' Array of Locked Register Ids
   reg_limit         is b
   USERID            is x
   trace_path        is x
   skipoperio        is x

   ' batch transaction variables
   start_id          is x
   COMPCODE          is i
   BATCHNO           is x
   trans_date        is d

   phys_rec_num      is i

   '********* Batch output VARIABLES *************
   BatchFile         is b           ' CARE Batch File Handle Number
   BatchFilename     is x           ' CARE Batch File Name
   OutRec            is x           ' Output Record
   MarkRecordSent    is x

   '********* DST VARIABLES *************
   c.ln              is x
   c.mn              is x
   c.fn              is x
   c.suffix          is x
   c.careid          is x
   c.reg.sub         is d           ' Registration Record Submit Date

   map_c.suffix      is x
   map_c.careid      is x
   map_c.reg.sub     is x

   client_careid     is x
   client_last       is x
   client_sufx       is x
   client_first      is x
   client_middle     is x

   ' Diagnosis Record (ICD-10)
   dx_library        is x
   lib-dx            is b

   dx_rec            is uid

   rc                is b
   T                 is x

gosub _init
gosub _main
rc = $closefile(Batchfile,"C")
return

'--------------------------------------
'  Main Program
'--------------------------------------
_main:
   client-id = start_id 
   ClCount++

   (void) $dbstart(02, client-id)              ' Get the first real ID in DB
   retcode = $dbread(02, client-id, c.reg.sub, c.ln, c.fn, c.mn, c.suffix, c.careid)

   do while (retcode < 3 or retcode = 4)

      client_careid = c.careid
      client_last   = c.ln
      client_sufx   = c.suffix
      client_first  = c.fn
      client_middle = c.mn

      if $operioallow = "Y" then
         $disp(client-id, 6, 16, 10, "H")    ' Show the client id being processed
         $disp($fmt(DiagCount, "           Diagnosis: 999999"), 10, 5)
         $disp($fmt(TransCount, " Transaction Records: 999999"), 15, 5)
         $disp($fmt(ClCount, "        Client Count: 999999"), 16, 5)
      endif

      'only create a dx batch if the reg happened before today.
      if c.reg.sub dp and c.reg.sub < $today then
         gosub ICD10
      endif

      ClCount++
      if regid[] dp then
         client-id = regid[ClCount]
         retcode = $dbread(02, client-id, c.reg.sub, c.ln, c.fn, c.mn, c.suffix, c.careid)
      else
         retcode = $dbreadnext(02, client-id, c.reg.sub, c.ln, c.fn, c.mn, c.suffix, c.careid)
      endif
      if ClCount > reg_limit and reg_limit != 0 then
         retcode = 99
      endif
   enddo

   'remove the leading transcount
   Transcount -= 1

   'rebuild the option string for output
   option = $varname(Transcount) + "`" + Transcount + ";"
   T = $varname(lockreg[])
   retcode = 0
   do while retcode++  < $maxarray(lockreg[])
      option += T + "-" + retcode + "`" + lockreg[retcode] + ";"
   enddo
   $allowupdate(parmfile, option)

goback

ICD10:

   'bail if the client register is locked
   if retcode = 4 then
      LockReg[++lock-idx] = client-id
      goback
   endif

   outrec = lib-dx:getDxBatchTrans(dx_rec, $today, COMPCODE, BATCHNO, $today, transcount, USERID, 
      client-id, client_careid, client_last, client_sufx, client_first, client_middle)

   if outrec dp then

      DiagCount++
      'lead' the transcount for the next record
      Transcount++

      rc = $writefile(BatchFile, OutRec)

      if MarkRecordSent = "Y" then
         lib-dx:MarkAsBatched(client-id, $today, dx_rec)
      endif
   endif
goback


'--------------------------------------
'  Initialization Section
'--------------------------------------
_init:
   if parmfile !dp then
      parmfile = CN_DefaultParm
   endif

   skipoperio = "N"
   BatchFilename  = "/c0/carebatch/tempbatch"   ' Define File Name and Path

   dx_library = "lib_DX10"

   map_c.suffix = $varname(c.suffix)
   map_c.careid = $varname(c.careid)
   map_c.reg.sub = $varname(c.reg.sub)

   'load configuration
   getParm(parmfile)
   getOption(option)

   if trace_path dp then
      $trace("path,on", trace_path)
   endif

   if COMPCODE !dp then
      $errmsg1 = "Component Code Not Defined"
      return
   endif

   if USERID !dp then
      $errmsg1 = "Care User Not Defined"
      return
   endif

   if BATCHNO !dp then
      $errmsg1 = "Batch Number Not Defined"
   endif

   if BatchFilename !dp then
      $errmsg1 = "Batchfile not Defined"
   endif

   'map the non-system dsts
   $setvarname(c.suffix, map_c.suffix)
   $setvarname(c.careid, map_c.careid)
   $setvarname(c.reg.sub, map_c.reg.sub)

   if regid[] dp then
      reg_limit = $maxarray(regid[])
      start_id = regid[1]
   endif

   if $loadlib(lib-dx, dx_library) > 0 then
      'you must specify and load a library that implements the DX-interface
      return
   endif

   ' TransCount can be set by option string
   if TransCount !dp then
      TransCount     = 0             ' Initialize Transaction Counter
   endif
   $looplimit     = 0             ' Disable Loop Limit
   DiagCount      = 0             ' Initialize Diagnosis Record Counter
   ClCount        = 0             ' Initialize Client Count
   lock-idx       = 0

   'oneyear = $today - 365
   $clear(LockReg[])

   ' Open Output File
   BatchFile      = $fileavail()                ' Get Available File Number

   'retcode = $openfile(Batchfile, BatchFilename, "O")
   retcode = $openfile(Batchfile, BatchFilename, "E")
   if retcode > 0 then
      '#thumb add email
      $errmsg1 = $fmt(retcode,"ERROR - Could not open the output file.  RC:99")
      return                                    '
   endif

   ' Open a window & prompt for user input
   if $operioallow = "Y" and skipoperio != "Y" then
      $openwin(win, 1, 24, 1, 80)
      $disp("DX Batch Processor", 2, 25, ,"H")
      $disp("This script prepares the DX batch body for submission", 4, 15)
      $disp("Ok to run script?", 23, 5)
      do while 1 = 1
         $acpt(OK, 23, 23, 1, "YN")
         if ($acptkey = "F9"  or  OK = "N") then
             return
         endif

         if $uc(OK) = "Y" then
            $disp("{{{{{ Processing .... Please Wait }}}}}", 23, 20)
            $disp("Client ID:", 6, 5)
            goback
         endif
         $disp("", 23, 5, 25)
      enddo
   endif
goback

end dx-batch

%include inc_GetParm
%include inc_GetOption
